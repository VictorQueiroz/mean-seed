(function () {
	'use strict';

	angular
		.module('App/Controllers', []);
})();
(function () {
	'use strict';

	angular
		.module('App/Directives', []);
})();
(function () {
	'use strict';

	angular
		.module('App/Filters', [])

		.config(function () {
			console.log('Configuring module App/Filters...');
		})

		.run(function () {
			console.log('Running module App/Filters...');
		});
})();
(function () {
	'use strict';

	angular
		.module('App', [
			'ngRoute',
			'ngAnimate',
			'ngSanitize',

			'ngSocketIO',
			'ui.bootstrap',
			'mgcrea.ngStrap',	
			'pascalprecht.translate',
			'victorqueiroz.ngPaginator',

			'App/Controllers',
			'App/Filters',
			'App/Directives',
			'App/Services',
			'App/Partials',
			'App/Routes',			

			'Auth',
			'Post',
		])

		.constant('_CSRF', angular.element(document.querySelector('meta[name=_csrf]')).attr('content'))

		.config(['$httpProvider', '_CSRF', function ($httpProvider, _CSRF) {
			$httpProvider.defaults.headers.common = {
				'X-CSRF-Token': _CSRF
			};

			console.log('Configuring module: App...');
		}])

		.run(['$rootScope', '$socket', function($rootScope, $socket) {
			$socket().then(function(socket) {
				socket.on('user connected', function () {
					console.log('New user connected!');
				});

				socket.on('user disconnected', function () {
					console.log('A user disconnected!');
					$rootScope.$broadcast('user disconnected');
				});

				$rootScope.$on('user disconnected', function () {
				});
			});

			console.log('Running module: App...');
		}]);
})();
(function () {
	'use strict';

	angular
		.module('App/Routes', [])

		.config(['$routeProvider', '$locationProvider', function ($routeProvider, $locationProvider) {
			console.log('Configuring module App/Routes...');

			$routeProvider

				.when('/', {
					templateUrl: 'index.tpl.html'
				})

				.when('/about-us', {
					templateUrl: 'about-us.tpl.html'
				})

				.otherwise({ redirectTo: '/' });

			$locationProvider.html5Mode(true);
		}])

		.run(function () {
			console.log('Running module App/Routes...');
		});
})();
(function () {
	'use strict';

	angular
		.module('App/Services', [])

		.value('version', '0.0.1');
})();
(function () {
	'use strict';

	angular.module('Auth/Ctrl/Auth', [])

	.controller('AuthCtrl', ['$scope', '$http', '$socket', '$location', '$window', function ($scope, $http, $socket, $location, $window) {
		$scope.authenticate = function (credentials) {
			$http.post('/auth/local', credentials).then(function(res) {
				var user = res.data;

				$socket().then(function(socket) {
					if(!res.data.result) {
						socket.emit('user unauthorized', {});
					}
					
					if (user.username) {
						socket.emit('user authenticated', user);
						$location.path('/');
					}	else {
						socket.emit('user authentication error', {});
					}
				});
			});
		};

		$scope.authenticateWithFB = function () {
			$window.location.href = '/auth/facebook';
		};
	}]);
})();
(function () {
	'use strict';

	angular.module('Auth/Service', []);
})();
(function () {
	'use strict';

	angular.module('Auth/Directive/IfAuthenticated', [])

	.directive('ifAuthenticated', ['Session', function(Session) {
		return {
			link: function($scope, $element, $attr) {
				Session.isAuthenticated().then(function(res) {
					if(!res.result) {
						$element.remove();
					}
				});
			}
		};
	}]);
})();
(function () {
	'use strict';

	angular.module('Auth/Directive/IfGuest', [])

	.directive('ifGuest', ['Session', function(Session) {
		return {
			link: function($scope, $element) {
				Session.isAuthenticated().then(function(res) {
					if(res.result) {
						$element.remove();
					}
				});
			}
		};
	}]);
})();
(function () {
	'use strict';

	angular.module('Auth/Controllers', [
		'Auth/Ctrl/Auth'
	]);
})();
(function () {
	'use strict';

	angular.module('Auth/Directives', [
		'Auth/Directive/IfAuthenticated',
		'Auth/Directive/IfGuest'
	]);
})();
(function () {
	'use strict';

	angular.module('Auth', [
		'ngRoute',
		'ngSocketIO',

		'Session/Service',

		'Auth/Controllers',
		'Auth/Routes',
		'Auth/Directives'
	])

	.run(['$rootScope', '$route', '$location', '$socket', 'Session', function($rootScope, $route, $location, $socket, Session) {
		$socket().then(function(socket) {
			socket.on('user authenticated', function(user) {
				console.log('Congratulations, '+user.username+', you\'re logged!');
			});

			socket.on('user unauthorized', function() {
				console.log('Sorry, you can not access this area!');
			});

			socket.on('user authentication error', function () {
				console.log('Ocorreu um erro, tente novamente mais tarde!');
			});
		});

		$rootScope.$on('session:logout', function () {
			Session.destroy();
		});

		$rootScope.$on('$routeChangeStart', function(event, next) {
			var params = next.$$route;

			console.log('Checking if you can access this location...');

			var isAuthenticated = Session.isAuthenticated;

			if(params.guest) { // Only guests users will can go in.
				console.log('This route are reserved for guests!');
				console.log('Checking if you are a guest...');

				isAuthenticated().then(function(res) {
					if(res.result) {
						console.log('You are not a guest.');
						console.log('You can not access this area.');
						$location.path('/'); // Temporary, until $routeChangeStart can not prevent default this event.
					} else if (!res.result) {
						console.log('You are a guest, you can go on!');
					}
				});
			} else if (params.authenticated) { // Only authenticated users will can go in.
				console.log('This route are reserved for authenticated users!');
				console.log('Checking if you are authenticated...');
				isAuthenticated().then(function(res) {
					if(!res.result) {
						console.log('You are not authenticated.');
						console.log('You can not access this area.');
						$location.path('/'); // Temporary, until $routeChangeStart can not prevent default this event.
					} else if (res.result) {
						console.log('You are authenticated, you can go on!');
					}
				});
			}

			// ngRoute bug
			// event.preventDefault();
		});	
	}]);
})();
(function () {
	'use strict';

	angular.module('Auth/Routes', [])

	.config(['$routeProvider', function ($routeProvider) {
		$routeProvider
			.when('/authentication', {
				templateUrl: 'authentication.tpl.html',
				controller: 'AuthCtrl',
				guest: true
			});
	}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Service', ['ngResource'])

		.factory('Post', ['$resource', function ($resource) {
			return $resource ('', {}, {
				'get': {url: '/api/posts/:id', params: {id: '@id'}, method: 'GET', isArray: false},
				'list': {url: '/api/posts', params: {}, method: 'GET', isArray: false},
				'save': {url: '/api/posts', params: {}, method: 'POST', isArray: false},
				'update': {url: '/api/posts/:id', params: {id: '@id'}, method: 'PUT', isArray: false},
				'destroy': {url: '/api/posts/:id', params: {id: '@id'}, method: 'DELETE', isArray: false}
			});
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Ctrl/PostCreate', [])

		.controller('PostCreateCtrl', ['$scope', '$location', '$socket', 'Post', function ($scope, $location, $socket, Post) {
			$scope.post = new Post();

			$scope.storePost = function (post) {
				post
					.$save()
					.then(function(post) {
						if(post) {
							$socket().then(function(socket) {
								socket.emit('post new', post._id);
							});
							
							$location.path('/posts/' + (post._id ? post._id : ''));
						}
					});
			};
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Ctrl/PostDetail', [])

		.controller('PostDetailCtrl', ['$scope', '$routeParams', 'Post', function ($scope, $routeParams, Post) {
			var post = $scope.post = Post.get({ id: $routeParams.id });
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Ctrl/PostEdit', [])

		.controller('PostEditCtrl', ['$scope', '$location', '$routeParams', 'Post', function ($scope, $location, $routeParams, Post) {
			$scope.post = Post.get({ id: $routeParams.id });

			$scope.updatePost = function (post) {
				post
					.$update()
					.then(function () {
						$location.path('/posts');
					});
			};
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Ctrl/PostList', [])

		.controller('PostListCtrl', ['$scope', '$location', '$socket', '$moment', 'Post', function ($scope, $location, $socket, $moment, Post) {
			$scope.$watch('paginator.perPage', function(perPage) {
				$scope.$broadcast('posts paginator reload');
			});

			$scope.$on('posts page changed', function(event, page, paginator) {
				if(paginator.perPage < 1) {
					paginator.perPage = 4;
				}

				Post.list({
					page: page,
					per_page: paginator.perPage
				}).$promise.then(function(pag) {
					$moment().then(function(moment) {
						$scope.posts = pag.data;

						Object.keys($scope.posts).forEach(function (key) {
							var post = $scope.posts[key];

							post.created_at = moment(post.created_at).fromNow();
						});
					});

					angular.extend(paginator, pag);
				});
			});

			$socket().then(function(socket) {
				socket.on('post new', function(post) {
					console.log(post);
					
					$scope.$broadcast('posts paginator reload');
				});
			});

			$scope.editPost = function (post) {
				$location.path('/posts/' + post.id + '/edit');
			};
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Controllers', [	
			'Post/Ctrl/PostList',
			'Post/Ctrl/PostDetail',
			'Post/Ctrl/PostCreate',
			'Post/Ctrl/PostEdit'
		]);
})();
(function () {
	'use strict';

	angular
		.module('Post', [
			'ngRoute',
			'ngSocketIO',
			'ngMoment',

			'Post/Controllers',
			'Post/Services',
			'Post/Routes'
		]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Routes', [])

		.config(['$routeProvider', function ($routeProvider) {
			$routeProvider
				.when('/posts', {
					templateUrl: 'posts/list.tpl.html',
					controller: 'PostListCtrl'
				})

				.when('/posts/create', {
					templateUrl: 'posts/create.tpl.html',
					controller: 'PostCreateCtrl'
				})

				.when('/posts/:id', {
					templateUrl: 'posts/show.tpl.html',
					controller: 'PostDetailCtrl'
				})

				.when('/posts/:id/edit', {
					templateUrl: 'posts/edit.tpl.html',
					controller: 'PostEditCtrl'
				});
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Services', [
			'Post/Service'
		]);
})();
(function () {
	'use strict';

	angular
		.module('Session/Service', [])

		.factory('Session', ['$http', '$window', function ($http, $window) {
			var request = function () {
				return $http.get('/auth/check');
			};

			return {
				isAuthenticated: function () {
					return request().then(function(res) {
						if(res.data.result) {
							return {result: true};
						} else {
							return {result: false};
						}
					});
				},

				getUser: function () {
					return request().then(function(res) {
						if(res.data.result) {
							return res.data.user;
						}	else {
							return {result: false};
						}
					});
				},

				destroy: function () {
					$window.location.href = '/auth/destroy';
				}
			};
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Session', [
			'Session/Services'
		]);
})();
(function () {
	'use strict';

	angular
		.module('Session/Services', [
			'Session/Service'
		]);
})();
(function () {
	'use strict';

	angular.module('Auth/Ctrl/Auth', [])

	.controller('AuthCtrl', ['$scope', '$http', '$socket', '$location', '$window', function ($scope, $http, $socket, $location, $window) {
		$scope.authenticate = function (credentials) {
			$http.post('/auth/local', credentials).then(function(res) {
				var user = res.data;

				$socket().then(function(socket) {
					if(!res.data.result) {
						socket.emit('user unauthorized', {});
					}
					
					if (user.username) {
						socket.emit('user authenticated', user);
						$location.path('/');
					}	else {
						socket.emit('user authentication error', {});
					}
				});
			});
		};

		$scope.authenticateWithFB = function () {
			$window.location.href = '/auth/facebook';
		};
	}]);
})();
(function () {
	'use strict';

	angular.module('Auth/Service', []);
})();
(function () {
	'use strict';

	angular.module('Auth/Directive/IfAuthenticated', [])

	.directive('ifAuthenticated', ['Session', function(Session) {
		return {
			link: function($scope, $element, $attr) {
				Session.isAuthenticated().then(function(res) {
					if(!res.result) {
						$element.remove();
					}
				});
			}
		};
	}]);
})();
(function () {
	'use strict';

	angular.module('Auth/Directive/IfGuest', [])

	.directive('ifGuest', ['Session', function(Session) {
		return {
			link: function($scope, $element) {
				Session.isAuthenticated().then(function(res) {
					if(res.result) {
						$element.remove();
					}
				});
			}
		};
	}]);
})();
(function () {
	'use strict';

	angular.module('Auth/Controllers', [
		'Auth/Ctrl/Auth'
	]);
})();
(function () {
	'use strict';

	angular.module('Auth/Directives', [
		'Auth/Directive/IfAuthenticated',
		'Auth/Directive/IfGuest'
	]);
})();
(function () {
	'use strict';

	angular.module('Auth', [
		'ngRoute',
		'ngSocketIO',

		'Session/Service',

		'Auth/Controllers',
		'Auth/Routes',
		'Auth/Directives'
	])

	.run(['$rootScope', '$route', '$location', '$socket', 'Session', function($rootScope, $route, $location, $socket, Session) {
		$socket().then(function(socket) {
			socket.on('user authenticated', function(user) {
				console.log('Congratulations, '+user.username+', you\'re logged!');
			});

			socket.on('user unauthorized', function() {
				console.log('Sorry, you can not access this area!');
			});

			socket.on('user authentication error', function () {
				console.log('Ocorreu um erro, tente novamente mais tarde!');
			});
		});

		$rootScope.$on('session:logout', function () {
			Session.destroy();
		});

		$rootScope.$on('$routeChangeStart', function(event, next) {
			var params = next.$$route;

			console.log('Checking if you can access this location...');

			var isAuthenticated = Session.isAuthenticated;

			if(params.guest) { // Only guests users will can go in.
				console.log('This route are reserved for guests!');
				console.log('Checking if you are a guest...');

				isAuthenticated().then(function(res) {
					if(res.result) {
						console.log('You are not a guest.');
						console.log('You can not access this area.');
						$location.path('/'); // Temporary, until $routeChangeStart can not prevent default this event.
					} else if (!res.result) {
						console.log('You are a guest, you can go on!');
					}
				});
			} else if (params.authenticated) { // Only authenticated users will can go in.
				console.log('This route are reserved for authenticated users!');
				console.log('Checking if you are authenticated...');
				isAuthenticated().then(function(res) {
					if(!res.result) {
						console.log('You are not authenticated.');
						console.log('You can not access this area.');
						$location.path('/'); // Temporary, until $routeChangeStart can not prevent default this event.
					} else if (res.result) {
						console.log('You are authenticated, you can go on!');
					}
				});
			}

			// ngRoute bug
			// event.preventDefault();
		});	
	}]);
})();
(function () {
	'use strict';

	angular.module('Auth/Routes', [])

	.config(['$routeProvider', function ($routeProvider) {
		$routeProvider
			.when('/authentication', {
				templateUrl: 'authentication.tpl.html',
				controller: 'AuthCtrl',
				guest: true
			});
	}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Service', ['ngResource'])

		.factory('Post', ['$resource', function ($resource) {
			return $resource ('', {}, {
				'get': {url: '/api/posts/:id', params: {id: '@id'}, method: 'GET', isArray: false},
				'list': {url: '/api/posts', params: {}, method: 'GET', isArray: false},
				'save': {url: '/api/posts', params: {}, method: 'POST', isArray: false},
				'update': {url: '/api/posts/:id', params: {id: '@id'}, method: 'PUT', isArray: false},
				'destroy': {url: '/api/posts/:id', params: {id: '@id'}, method: 'DELETE', isArray: false}
			});
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Ctrl/PostCreate', [])

		.controller('PostCreateCtrl', ['$scope', '$location', '$socket', 'Post', function ($scope, $location, $socket, Post) {
			$scope.post = new Post();

			$scope.storePost = function (post) {
				post
					.$save()
					.then(function(post) {
						if(post) {
							$socket().then(function(socket) {
								socket.emit('post new', post._id);
							});
							
							$location.path('/posts/' + (post._id ? post._id : ''));
						}
					});
			};
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Ctrl/PostDetail', [])

		.controller('PostDetailCtrl', ['$scope', '$routeParams', 'Post', function ($scope, $routeParams, Post) {
			var post = $scope.post = Post.get({ id: $routeParams.id });
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Ctrl/PostEdit', [])

		.controller('PostEditCtrl', ['$scope', '$location', '$routeParams', 'Post', function ($scope, $location, $routeParams, Post) {
			$scope.post = Post.get({ id: $routeParams.id });

			$scope.updatePost = function (post) {
				post
					.$update()
					.then(function () {
						$location.path('/posts');
					});
			};
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Ctrl/PostList', [])

		.controller('PostListCtrl', ['$scope', '$location', '$socket', '$moment', 'Post', function ($scope, $location, $socket, $moment, Post) {
			$scope.$watch('paginator.perPage', function(perPage) {
				$scope.$broadcast('posts paginator reload');
			});

			$scope.$on('posts page changed', function(event, page, paginator) {
				if(paginator.perPage < 1) {
					paginator.perPage = 4;
				}

				Post.list({
					page: page,
					per_page: paginator.perPage
				}).$promise.then(function(pag) {
					$moment().then(function(moment) {
						$scope.posts = pag.data;

						Object.keys($scope.posts).forEach(function (key) {
							var post = $scope.posts[key];

							post.created_at = moment(post.created_at).fromNow();
						});
					});

					angular.extend(paginator, pag);
				});
			});

			$socket().then(function(socket) {
				socket.on('post new', function(post) {
					console.log(post);
					
					$scope.$broadcast('posts paginator reload');
				});
			});

			$scope.editPost = function (post) {
				$location.path('/posts/' + post.id + '/edit');
			};
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Controllers', [	
			'Post/Ctrl/PostList',
			'Post/Ctrl/PostDetail',
			'Post/Ctrl/PostCreate',
			'Post/Ctrl/PostEdit'
		]);
})();
(function () {
	'use strict';

	angular
		.module('Post', [
			'ngRoute',
			'ngSocketIO',
			'ngMoment',

			'Post/Controllers',
			'Post/Services',
			'Post/Routes'
		]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Routes', [])

		.config(['$routeProvider', function ($routeProvider) {
			$routeProvider
				.when('/posts', {
					templateUrl: 'posts/list.tpl.html',
					controller: 'PostListCtrl'
				})

				.when('/posts/create', {
					templateUrl: 'posts/create.tpl.html',
					controller: 'PostCreateCtrl'
				})

				.when('/posts/:id', {
					templateUrl: 'posts/show.tpl.html',
					controller: 'PostDetailCtrl'
				})

				.when('/posts/:id/edit', {
					templateUrl: 'posts/edit.tpl.html',
					controller: 'PostEditCtrl'
				});
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Post/Services', [
			'Post/Service'
		]);
})();
(function () {
	'use strict';

	angular
		.module('Session/Service', [])

		.factory('Session', ['$http', '$window', function ($http, $window) {
			var request = function () {
				return $http.get('/auth/check');
			};

			return {
				isAuthenticated: function () {
					return request().then(function(res) {
						if(res.data.result) {
							return {result: true};
						} else {
							return {result: false};
						}
					});
				},

				getUser: function () {
					return request().then(function(res) {
						if(res.data.result) {
							return res.data.user;
						}	else {
							return {result: false};
						}
					});
				},

				destroy: function () {
					$window.location.href = '/auth/destroy';
				}
			};
		}]);
})();
(function () {
	'use strict';

	angular
		.module('Session', [
			'Session/Services'
		]);
})();
(function () {
	'use strict';

	angular
		.module('Session/Services', [
			'Session/Service'
		]);
})();
//# sourceMappingURL=data:application/json;base64,